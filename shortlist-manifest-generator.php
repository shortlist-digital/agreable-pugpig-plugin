<?php



class Shortlist_Manifest_Builder {
  public function __construct($post_object) {
    $this->post = new TimberPost($post_object);
    $this->base_url = get_bloginfo('url');
    $this->permalink = get_permalink($post_object);
    $this->raw_html = file_get_contents($this->permalink);
  }

  public function build_manifest() {
    ob_start();
    $this->cache_header();
    $this->cache_list();
    $this->inline_images();
    $this->theme_manifest();
    return ob_get_clean();
  }

  public function cache_header() {
    $this->line("CACHE MANIFEST");
    $this->comment("Post: ".$this->post->title);
    $this->comment("Generated by ShortList Manifest Generator");
  }

  public function theme_manifest() {
    $this->line("");
    $this->comment("Theme Manifest");
    $this->line(get_theme_root()."/".get_stylesheet()."/public/assets/styles.css");
    $this->line(get_theme_root()."/".get_stylesheet()."/public/assets/app.js");
  }


  public function cache_list() {
    $this->line("");
    $this->line("CACHE:");
  }

  public function inline_images() {
    $this->comment("Inline Images:");
    foreach($this->image_urls() as $url):
      $this->line($url);
    endforeach;
  }

  public function image_urls() {
    $pattern = '~(http.*\.)(jpe?g|png|[tg]iff?|svg)~i';
    $m = preg_match_all($pattern,$this->raw_html,$matches);
    $image_array = $matches[0];
    $image_array = array_map(array($this, 'absolute_to_relative_url'), $image_array);
    return $image_array;
  }

  public function absolute_to_relative_url($url) {
    return str_replace($this->base_url, "", $url);
  }

  public function line($line) {
    print("$line\n");
  }

  public function comment($line) {
    print("# $line\n");
  }
}
